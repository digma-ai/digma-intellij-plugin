
name: Build main and Prepare Release
on:
  push:
    branches: [ main ]

jobs:
  call-build-workflow:
    strategy:
      matrix:
        profile: [ lowest, latest, eap ]
    uses: ./.github/workflows/build-workflow.yml
    with:
      build-profile: ${{ matrix.profile }}
      ref-name: ${{ github.ref_name }}
      build-with-rider: false
    secrets: inherit

  call-build-workflow-with-rider:
    strategy:
      matrix:
        profile: [ lowest, latest, eap ]
    uses: ./.github/workflows/build-workflow.yml
    with:
      build-profile: ${{ matrix.profile }}
      ref-name: ${{ github.ref_name }}
      build-with-rider: true
    secrets: inherit



  # Prepare a draft release for GitHub Releases page for the manual verification
  # If accepted and published, release workflow would be triggered
  releaseDraft:
    needs: [ call-build-workflow,call-build-workflow-with-rider ]
    #    needs: [ call-build-workflow-lowest,call-build-workflow-latest,call-build-workflow-eap ]
    name: Prepare Release Draft
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-22.04
    steps:

      - name: Fetch Sources
        uses: actions/checkout@v3

      - name: Export Properties
        id: properties
        shell: bash
        run: |
          VERSION=$(cat version.properties |grep "version="|cut -d= -f2)
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"

      # Remove old release drafts by using the curl request for the available releases with draft flag
      - name: Remove Old Release Drafts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api repos/{owner}/{repo}/releases \
            --jq '.[] | select(.draft == true) | .id' \
            | xargs -I '{}' gh api -X DELETE repos/{owner}/{repo}/releases/{}

      # Delete old release if exists
      - name: Delete old tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release delete v${{ steps.properties.outputs.version }} -y

      # Create new release draft - which is not publicly visible and requires manual acceptance
      - name: Create Release Draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ steps.properties.outputs.version }} \
            --draft \
            --title "v${{ steps.properties.outputs.version }}"
