## This is the workflow that creates the release draft

name: Build main and Prepare Release
on:
  push:
    branches: [ main ]

jobs:
  call-build-main-lowest:
    uses: ./.github/workflows/build-main.yml
    with:
      build-profile: "lowest"
    secrets: inherit
  call-build-main-latest:
    needs: call-build-main-lowest
    uses: ./.github/workflows/build-main.yml
    with:
      build-profile: "latest"
    secrets: inherit
  call-build-main-eap:
    needs: call-build-main-latest
    uses: ./.github/workflows/build-main.yml
    with:
      build-profile: "eap"
    secrets: inherit
  call-build-rider-lowest:
    needs: call-build-main-eap
    uses: ./.github/workflows/build-main-with-rider.yml
    with:
      build-profile: "lowest"
    secrets: inherit
  call-build-rider-latest:
    needs: call-build-rider-lowest
    uses: ./.github/workflows/build-main-with-rider.yml
    with:
      build-profile: "latest"
    secrets: inherit
  call-build-rider-eap:
    needs: call-build-rider-latest
    uses: ./.github/workflows/build-main-with-rider.yml
    with:
      build-profile: "eap"
    secrets: inherit

  #  call-build-main:
  #    strategy:
  #      matrix:
  #        profile: [ lowest, latest, eap ]
  #    uses: ./.github/workflows/build-main.yml
  #    with:
  #      build-profile: ${{ matrix.profile }}
  #    secrets: inherit
  #  call-build-rider:
  #    needs: call-build-main
  #    strategy:
  #      matrix:
  #        profile: [ lowest, latest, eap ]
  #    uses: ./.github/workflows/build-main-with-rider.yml
  #    with:
  #      build-profile: ${{ matrix.profile }}
  #    secrets: inherit


  # Prepare a draft release for GitHub Releases page for the manual verification
  # If accepted and published, release workflow would be triggered
  releaseDraft:
    needs: [ call-build-rider-eap ]
    name: Prepare Release Draft
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v3

      - name: Export Properties
        id: properties
        shell: bash
        run: |
          VERSION=$(cat version.properties |grep "version="|cut -d= -f2)
          echo "::set-output name=version::$VERSION"

      # Remove old release drafts by using the curl request for the available releases with draft flag
      - name: Remove Old Release Drafts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api repos/{owner}/{repo}/releases \
            --jq '.[] | select(.draft == true) | .id' \
            | xargs -I '{}' gh api -X DELETE repos/{owner}/{repo}/releases/{}

      # Create new release draft - which is not publicly visible and requires manual acceptance
      - name: Create Release Draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ steps.properties.outputs.version }} \
            --draft \
            --title "v${{ steps.properties.outputs.version }}"
