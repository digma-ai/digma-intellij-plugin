name: Build workflow

on:
  workflow_call:
    inputs:
      build-profile:
        required: true
        type: string
      ref-name:
        required: true
        type: string
      build-with-rider:
        required: true
        type: string

jobs:
  build:

    runs-on: ubuntu-22.04

    steps:

      - name: Debug
        run: echo "Building ref ${{ inputs.ref-name }} with profile ${{ inputs.build-profile }}"

      - name: Fetch Sources
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref-name }}

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: |
            6.0.411

      ## wrapper-validation-action fails too often with this error https://github.com/gradle/wrapper-validation-action/issues/40
      ## we don't need it because we usually don't have contributors replacing it
      #      - name: Validate Gradle wrapper
      #        uses: gradle/wrapper-validation-action@v1


      - name: Build Plugin
        if: ${{ inputs.build-with-rider != 'true' }}
        env:
          POSTHOG_TOKEN_URL: ${{ secrets.POSTHOG_TOKEN_URL }}
        run: ./gradlew clean test buildPlugin --no-configuration-cache -PbuildProfile=${{ inputs.build-profile }} -PdoNotDownloadSources=true

      - name: Build Plugin with Rider
        if: ${{ inputs.build-with-rider == 'true' }}
        env:
          POSTHOG_TOKEN_URL: ${{ secrets.POSTHOG_TOKEN_URL }}
        run: ./gradlew clean test buildPlugin --no-configuration-cache -PbuildWithRider=true -PbuildProfile=${{ inputs.build-profile }} -PdoNotDownloadSources=true

      - name: Find posthog url
        id: posthog
        shell: bash
        run: |
          cd ${{ github.workspace }}/build/libs
          FILENAME=`ls instrumented-digma-intellij-plugin*.jar`
          unzip -q "$FILENAME" -d content
          URL=$(cat ./content/posthog-token-url.txt)
          echo "url=${URL}" >> "$GITHUB_OUTPUT"

      - name: Debug posthog url
        if: ${{ steps.posthog.outputs.url == '' }}
        run: echo "posthog url is empty,failing build"

      - name: Verify posthog url exists
        if: ${{ steps.posthog.outputs.url == '' }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('posthog url is empty')

      - name: Prepare Plugin Artifact
        if: ${{ inputs.build-with-rider != 'true' }}
        id: artifact
        shell: bash
        run: |
          cd ${{ github.workspace }}/build/distributions
          FILENAME=`ls *.zip`
          unzip "$FILENAME" -d content
          echo "filename=${FILENAME:0:-4}" >> "$GITHUB_OUTPUT"

      - name: Upload Artifact
        if: ${{ inputs.build-with-rider != 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.artifact.outputs.filename }}
          path: ./build/distributions/content/*/*
          retention-days: 5

      # Collect Tests Result of failed tests
      ##todo: add other modules test reports
      - name: Collect Tests Result
        if: ${{ inputs.build-with-rider != 'true' || failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: tests-result-${{ inputs.build-profile }}
          path: ${{ github.workspace }}/ide-common/build/reports/tests
          retention-days: 5
