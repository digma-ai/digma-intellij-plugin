## This is the workflow that creates the release draft

name: Build main (lowest profile) and Prepare Release
on:
  push:
    branches: [ main ]

jobs:
  call-build-main:
    strategy:
      matrix:
        profile: [ lowest, latest, eap ]
    uses: ./.github/workflows/build-main.yml
    with:
      build-profile: ${{ matrix.profile }}
  call-build-rider:
    strategy:
      matrix:
        profile: [ lowest, latest, eap ]
    uses: ./.github/workflows/build-main-with-rider.yml
    with:
      build-profile: ${{ matrix.profile }}


  # Prepare a draft release for GitHub Releases page for the manual verification
  # If accepted and published, release workflow would be triggered
  releaseDraft:
    needs: [ call-build-main,call-build-rider ]
    name: Prepare Release Draft
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v3

      # Remove old release drafts by using the curl request for the available releases with draft flag
      - name: Remove Old Release Drafts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api repos/{owner}/{repo}/releases \
            --jq '.[] | select(.draft == true) | .id' \
            | xargs -I '{}' gh api -X DELETE repos/{owner}/{repo}/releases/{}

      # Create new release draft - which is not publicly visible and requires manual acceptance
      - name: Create Release Draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ needs.build.outputs.version }} \
            --draft \
            --title "v${{ needs.build.outputs.version }}" \
            --notes "## ${{ needs.build.outputs.version }} "
