

since intellij platform gradle plugin 2 , building with EAP is more complicated.

the plugin needs to download an IDE in order to configure the build, it downloads IDEs from different places depending
on the version.

the plugin downloads GA releases from jetbrains CDN:
https://data.services.jetbrains.com/products
this list contains GA releases. but may also contain EAP builds.

when building for EAP the version we use may be something like 242-EAP-SNAPSHOT or 242.12881.66-EAP-SNAPSHOT
these are not available in CDN, they are available in jetbrains maven repository:
https://www.jetbrains.com/intellij-repository/snapshots
https://www.jetbrains.com/intellij-repository/releases

the intellij platform gradle plugin will not find them in CDN and needs a gradle property to switch to maven:

org.jetbrains.intellij.platform.buildFeature.useBinaryReleases=false

this property can be in gradle.properties or sent to the gradle with -P
the IDEs downloaded from maven do not have a bundled JBR(jetbrains runtime).
if running runIde with an IDE from maven runIde will run the IDE with the jdk from java toolchain,
this jdk may not support JCEF, and may not even be a JBR.
in that case we need to add a jetbrains runtime dependency:
https://plugins.jetbrains.com/docs/intellij/tools-intellij-platform-gradle-plugin-dependencies-extension.html#java-runtime
hopefully the jetbrainsRuntime() will select a suitable JBR for the downloaded IDE.


we need to try and use IDE that exists in CDN,
its possible to query the CDN list and see if there is a build for EAP there and if its suitable for us.
we can always use the same build number of the EAP that toolbox suggests to install, this EAP will have a release in CDN.
our EAP can always just follow the EAP release , this will free us from using the useBinaryReleases=false property
and from the need to add a JBR to the build.


there is a separate list of builds that can be queried :
https://www.jetbrains.com/updates/updates.xml
this list contains all available releases for products

if there is no release for an EAP in CDN then we must use a snapshot from maven, add the property
 useBinaryReleases=false and configure a JBR to runIde




to download the CDN list:
curl -o jetbrains-cdn.json https://data.services.jetbrains.com/products   -H "Accept: application/json"

to view the codes in https://data.services.jetbrains.com/products
cat jetbrains-cdn.json| python -m json.tool |grep "\"code\":"

to download a list of one code, for example iic (intellij idea community):
curl -o jetbrains-cdn-iic.json https://data.services.jetbrains.com/products?code=IIC   -H "Accept: application/json"
