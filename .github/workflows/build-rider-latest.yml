name: Build Rider main (latest profile)
on:
  push:
    branches: [ main ]

jobs:

  build:

    name: Build and Verify Rider (latest profile)
    runs-on: ubuntu-latest

    steps:

      - name: Fetch Sources
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: |
            6.0.102

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.4

      - name: Build Plugin (latest profile)
        env:
          POSTHOG_TOKEN_URL: ${{ secrets.POSTHOG_TOKEN_URL}}
        run: ./gradlew clean test buildPlugin -PbuildWithRider=true -PbuildProfile=latest --no-daemon

      - name: Collect Tests Result
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: tests-result
          path: ${{ github.workspace }}/ide-common/build/reports/tests


      ## can't verify Rider because it will fail on code in java or python modules that don't exist in Rider.
      ## but it's ok because this workflow build with Rider and that is good enough
      #      - name: Run Plugin Verifier
      #        run: ./gradlew clean runPluginVerifier -PbuildWithRider=true -PbuildProfile=latest --no-daemon
      #
      #      - name: Collect Plugin Verifier Result
      #        if: ${{ always() }}
      #        uses: actions/upload-artifact@v3
      #        with:
      #          name: pluginVerifier-result
      #          path: ${{ github.workspace }}/build/reports/pluginVerifier

      - name: Prepare Plugin Artifact
        id: artifact
        shell: bash
        run: |
          cd ${{ github.workspace }}/build/distributions
          FILENAME=`ls *.zip`
          unzip "$FILENAME" -d content

          echo "::set-output name=filename::${FILENAME:0:-4}"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.artifact.outputs.filename }}
          path: ./build/distributions/content/*/*
