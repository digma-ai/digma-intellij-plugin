# GitHub Actions Workflow created for handling the release process based on the draft release prepared
# with the Build workflow. Running the publishPlugin task requires the PUBLISH_TOKEN secret provided.


name: Publish to jetbrains marketplace (lowest profile)
on:
  release:
    types: [prereleased, released]

jobs:

  # Prepare and publish the plugin to the Marketplace repository
  publish:
#    todo: if: "github.event.release.released"
    name: Publish Plugin (lowest profile)
    runs-on: ubuntu-latest
    steps:

      - name: Fetch Sources
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: gradle

      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: |
            6.0.102

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.4

      - name: Export Properties
        id: properties
        shell: bash
        run: |
          CHANGELOG="$(cat << 'EOM' | sed -e 's/^[[:space:]]*$//g' -e '/./,$!d'
          ${{ github.event.release.body }}
          EOM
          )"
          
          echo "::set-output name=changelog::$CHANGELOG"

      # Update changelog
      - name: Patch Changelog
        if: ${{ steps.properties.outputs.changelog != '' }}
        env:
          CHANGELOG: ${{ steps.properties.outputs.changelog }}
        run: |
          ./gradlew patchChangelog --release-note="$CHANGELOG"

      # Publish the plugin to the Marketplace
      - name: Publish Plugin
        env:
          PUBLISH_TOKEN: ${{ secrets.DIGMA_JB_INTELLIJ_PUBLISH_TOKEN }}
          DIGMA_JB_PRIVATE_KEY_PASSWORD: ${{ secrets.DIGMA_JB_PRIVATE_KEY_PASSWORD }}
          DIGMA_JB_CERTIFICATE_CHAIN_FILE: ${{ secrets.DIGMA_JB_CERTIFICATE_CHAIN_FILE }}
          DIGMA_JB_PRIVATE_KEY_FILE: ${{ secrets.DIGMA_JB_PRIVATE_KEY_FILE }}
          POSTHOG_TOKEN_URL: ${{ secrets.POSTHOG_TOKEN_URL}}
        run: ./gradlew clean buildPlugin publishPlugin --no-daemon

      # Upload artifact as a release asset
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.event.release.tag_name }} ./build/distributions/*


      ## This section checks out main branch, update changelog file increment the version, commit and push.

      - name: Revert changelog file and untracked files
        run: |
          git reset --hard HEAD
          git clean -fd
          ./gradlew clean

      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main
          token: ${{ secrets.GH_ADMIN_TOKEN }}


      # Update changelog file again and commit to main
      - name: Patch Changelog in main branch
        if: ${{ steps.properties.outputs.changelog != '' }}
        env:
          CHANGELOG: ${{ steps.properties.outputs.changelog }}
        run: |
          ./gradlew patchChangelog --release-note="$CHANGELOG"

      - name: Increment version
        run: |
          ./gradlew incrementSemanticVersionPatch
          ./gradlew printSemanticVersion -q

      - name: Commit next version to main
        run: |
          VERSION=$(cat version.properties |grep "version="|cut -d= -f2)
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add version.properties
          git add CHANGELOG.md
          git commit -m "increment version after publish to ${VERSION} and update changelog"
          git push
