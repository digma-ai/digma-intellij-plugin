name: Build all branches (!main) (lowest profile)

on:
  push:
    branches: [ '**','!main' ]

jobs:
  call-build-workflow:
    uses: ./.github/workflows/build-workflow.yml
    with:
      build-profile: "lowest"
      ref-name: ${{ vars.GITHUB_REF_NAME }}
    secrets: inherit


#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Maximize build space
#        uses: easimon/maximize-build-space@master
#        with:
#          root-reserve-mb: 10000
#          temp-reserve-mb: 512
#          swap-size-mb: 1024
#          remove-android: true
#          remove-haskell: true
#          remove-codeql: true
#          remove-docker-images: true
#
#      - name: Fetch Sources
#        uses: actions/checkout@v3
#
#      - name: Setup Java
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'corretto'
#
#      - name: Setup dotnet
#        uses: actions/setup-dotnet@v2
#        with:
#          dotnet-version: |
#            6.0.411
#
#      - name: Validate Gradle wrapper
#        uses: gradle/wrapper-validation-action@v1.0.4
#
#
#      - name: Build Plugin
#        env:
#          POSTHOG_TOKEN_URL: ${{ secrets.POSTHOG_TOKEN_URL}}
#        run: ./gradlew clean test buildPlugin -PdoNotDownloadSources=true --no-configuration-cache  --gradle-user-home=./.localhome --project-cache-dir ./.projectcache
#
#      # Collect Tests Result of failed tests
#      ##todo: add other modules test reports
#      - name: Collect Tests Result
#        if: ${{ failure() }}
#        uses: actions/upload-artifact@v3
#        with:
#          name: tests-result
#          path: ${{ github.workspace }}/ide-common/build/reports/tests
#          retention-days: 5
#
#
#      - name: Run Plugin Verifier
#        run: ./gradlew clean runPluginVerifier -PdoNotDownloadSources=true --no-configuration-cache  --gradle-user-home=./.localhome --project-cache-dir ./.projectcache
#
#      - name: Collect Plugin Verifier Result
#        if: ${{ always() }}
#        uses: actions/upload-artifact@v3
#        with:
#          name: pluginVerifier-result
#          path: ${{ github.workspace }}/build/reports/pluginVerifier
#          retention-days: 5
#
#
#
#      - name: Prepare Plugin Artifact
#        id: artifact
#        shell: bash
#        run: |
#          cd ${{ github.workspace }}/build/distributions
#          FILENAME=`ls *.zip`
#          unzip "$FILENAME" -d content
#          echo "::set-output name=filename::${FILENAME:0:-4}"
#
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: ${{ steps.artifact.outputs.filename }}
#          path: ./build/distributions/content/*/*
#          retention-days: 5
#
