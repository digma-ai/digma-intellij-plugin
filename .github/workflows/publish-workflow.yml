

name: Publish to jetbrains marketplace
on:
  workflow_call:
    inputs:
      build-profile:
        required: true
        type: string
      tag-name:
        required: true
        type: string
      changelog:
        required: true
        type: string
    secrets:
      publish-token:
        required: true
      digma-jb-private-key-password:
        required: true
      digma-jb-certificate-chain-file:
        required: true
      digma-jb-private-key-file:
        required: true
      posthog-token-url:
        required: true
jobs:

  publish:
    name: Publish Plugin
    runs-on: ubuntu-latest
    steps:

      - name: Fetch Sources
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.tag-name }}

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.0.411

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.4

      - name: Export Properties
        id: properties
        shell: bash
        run: |
          CHANGELOG="$(cat << 'EOM' | sed -e 's/^[[:space:]]*$//g' -e '/./,$!d'
          ${{ inputs.changelog }}
          EOM
          )"
          
          echo "::set-output name=changelog::$CHANGELOG"

      # Update changelog
      - name: Patch Changelog
        if: ${{ steps.properties.outputs.changelog != '' }}
        env:
          CHANGELOG: ${{ steps.properties.outputs.changelog }}
        run: |
          ./gradlew -PbuildProfile=${{ inputs.build-profile }} --no-configuration-cache patchChangelog --release-note="$CHANGELOG"

      # Publish the plugin to the Marketplace
      - name: Publish Plugin
        env:
          PUBLISH_TOKEN: ${{ secrets.publish-token }}
          DIGMA_JB_PRIVATE_KEY_PASSWORD: ${{ secrets.digma-jb-private-key-password }}
          DIGMA_JB_CERTIFICATE_CHAIN_FILE: ${{ secrets.digma-jb-certificate-chain-file }}
          DIGMA_JB_PRIVATE_KEY_FILE: ${{ secrets.digma-jb-private-key-file }}
          POSTHOG_TOKEN_URL: ${{ secrets.posthog-token-url}}
        run: ./gradlew clean buildPlugin publishPlugin -PbuildProfile=${{ inputs.build-profile }} --no-configuration-cache

      # Upload artifact as a release asset
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ inputs.tag-name }} ./build/distributions/*